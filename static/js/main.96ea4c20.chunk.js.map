{"version":3,"sources":["Components/NavBar/NavBar.js","Components/Card/Card.js","redux/articles/articleReducer.js","Containers/Home/Home.js","Containers/Contact/Contact.js","Components/Form/Form.js","Containers/AddArticle/AddArticle.js","Containers/Article/Article.js","App.js","redux/store.js","index.js"],"names":["NavBar","useState","toggleMenu","setToggleMenu","window","innerWidth","largeur","setLargeur","useEffect","changeWidth","addEventListener","removeEventListener","className","to","onClick","Card","props","children","INITIAL_STATE","articles","articleReducer","state","action","type","newArr","unshift","payload","Home","useSelector","dispatch","useDispatch","length","fetch","then","response","json","data","map","item","title","pathname","replace","trim","body","uuidv4","Contact","Form","inputsRef","useRef","addRefs","el","current","includes","push","onSubmit","e","preventDefault","newArticle","value","target","reset","htmlFor","ref","id","placeholder","AddArticle","Article","location","useLocation","console","log","App","basename","process","path","exact","component","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"+UA8CeA,MA1Cf,WAAmB,IAAD,EAEsBC,oBAAS,GAF/B,mBAEPC,EAFO,KAEKC,EAFL,OAGgBF,mBAASG,OAAOC,YAHhC,mBAGPC,EAHO,KAGEC,EAHF,KAsBd,OAbDC,qBAAU,WAET,IAAMC,EAAa,WACfF,EAAWH,OAAOC,aAItB,OADAD,OAAOM,iBAAiB,SAAWD,GAC5B,WACHL,OAAOO,oBAAoB,SAAUF,MAGvC,IAGE,iCACMP,GAAcI,EAAU,MAC1B,qBAAIM,UAAU,QAAd,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACA,oBAAID,UAAU,QAAd,uBAEA,cAAC,IAAD,CAAMC,GAAG,UAAT,SACA,oBAAID,UAAU,QAAd,sBAEA,cAAC,IAAD,CAAMC,GAAG,WAAT,SACA,oBAAID,UAAU,QAAd,0BAIJ,wBAAQE,QAhCC,WACdX,GAAeD,IA+BkBU,UAAU,MAAtC,qB,oBC9BGG,MARf,SAAcC,GACV,OACI,qBAAKJ,UAAU,OAAf,SACKI,EAAMC,Y,eCNbC,EAAgB,CAElBC,SAAS,IA4BEC,MAzBf,WAAuD,IAA/BC,EAA8B,uDAAtBH,EAAeI,EAAO,uCAElD,OAAQA,EAAOC,MACX,IAAK,aACH,IAAOC,EAAM,YAAOH,EAAMF,UAE1B,OADAK,EAAOC,QAAQH,EAAOI,SAChB,CACFP,SAASK,GAGf,IAAK,eACD,OAAO,2BACAH,GADP,IAEIF,SAASG,EAAOI,UAQ5B,OAAOL,G,QCwBIM,MAzCf,WAAiB,IAENR,EAAYS,aAAY,SAAAP,GAAK,sBAC7BA,EAAMD,mBADND,SAIDU,EAAWC,cASjB,OAPAtB,qBAAU,WACiB,IAApBW,EAASY,QACTF,GDcsB,SAAAA,GAC7BG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJP,EAAS,CACLN,KAAK,eACLG,QAAQU,YClBZ,IAIE,qCACE,oBAAIxB,UAAU,aAAd,+BACA,qBAAKA,UAAU,kBAAf,SACIO,EAASkB,KAAI,SAAAC,GACV,OACG,eAAC,EAAD,WACI,6BAAKA,EAAKC,QACV,cAAC,IAAD,CAAM1B,GAAI,CACN2B,SAAS,YAAD,OAAaF,EAAKC,MAAME,QAAQ,OAAO,KAAKC,QACpDrB,MAAM,CACFkB,MAAMD,EAAKC,MACVI,KAAKL,EAAKK,OAJnB,8BAFOC,wB,aCXhBC,MAhBf,WACI,OACI,sBAAKjC,UAAU,oBAAf,UACG,gDACA,+DACA,mEACA,kEACA,+BACI,0CACA,yCACA,gD,MCyEAkC,MAlFf,WAOI,IAAMjB,EAAWC,cAqCViB,EAAaC,iBAAO,IAErBC,EAAU,SAAAC,GACTA,IAAOH,EAAUI,QAAQC,SAASF,IAChCH,EAAUI,QAAQE,KAAKH,IAIhC,OACI,qCACI,oBAAItC,UAAU,aAAd,gCACA,uBAAM0C,SA9CK,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAa,CACflB,MAAMQ,EAAUI,QAAQ,GAAGO,MAC3Bf,KAAKI,EAAUI,QAAQ,GAAGO,OAG9B7B,EAAS,CACLN,KAAK,aAENG,QAAQ+B,IAGXF,EAAEI,OAAOC,SAgCuBhD,UAAU,iBAAtC,UACI,uBAAOiD,QAAQ,QAAf,mBACA,uBAGAC,IAAKb,EACL1B,KAAK,OACLwC,GAAG,QACHC,YAAY,mBACZpD,UAAU,cAGV,uBAAOiD,QAAQ,UAAf,2BACF,0BAGAC,IAAKb,EACLc,GAAG,UACHC,YAAY,gBACZpD,UAAU,aAER,6DCrEDqD,MARf,WACI,OACI,mCACI,cAAC,EAAD,O,MCWGC,MAXf,WACI,IAAMC,EAAWC,cAEjB,OADAC,QAAQC,IAAIH,GAER,sBAAKvD,UAAU,kBAAf,UACI,iDAAoBuD,EAAS9C,MAAMkB,SACnC,4BAAI4B,EAAS9C,MAAMsB,WCehB4B,MAnBf,WACE,OACE,mCACA,eAAC,IAAD,CAAQC,SAAUC,mBAAlB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjD,IACjC,cAAC,IAAD,CAAO+C,KAAK,UAAUC,OAAK,EAACC,UAAWX,IACvC,cAAC,IAAD,CAAOS,KAAK,WAAWC,OAAK,EAACC,UAAW/B,IACxC,cAAC,IAAD,CAAO6B,KAAK,kBAAkBC,OAAK,EAACC,UAAWV,a,gBCbjDW,EAAcC,YAAgB,CAEhC1D,mBAQW2D,EAHDC,YAAYH,EAAaI,YAAgBC,MCJvDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEAM,SAASC,eAAe,W","file":"static/js/main.96ea4c20.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport './NavBar.css'\nimport {Link} from 'react-router-dom'\n\nfunction NavBar() {\n\n    const [toggleMenu, setToggleMenu] = useState(false);\n    const [largeur, setLargeur] = useState(window.innerWidth);\n\n   const toggleNav = () => {\n       setToggleMenu(!toggleMenu)\n   }\n\n   useEffect(() => {\n\n    const changeWidth =() => {\n        setLargeur(window.innerWidth);\n    }\n\n    window.addEventListener('resize',  changeWidth);\n    return () => {\n        window.removeEventListener('resize', changeWidth)\n    }\n      \n   }, [])\n\n    return (\n        <nav>\n            {(toggleMenu || largeur > 500 ) && (\n            <ul className=\"liste\">\n                <Link to='/'>\n                <li className=\"items\">Accueil</li>\n                </Link>\n                <Link to=\"/ecrire\">\n                <li className=\"items\">Ecrire</li>\n                </Link>\n                <Link to=\"/contact\">\n                <li className=\"items\">Contact</li>\n                </Link>\n            </ul>\n            )}\n            <button onClick={toggleNav} className=\"btn\">BTN</button>\n        </nav>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport './Card.css'\n\nfunction Card(props) {\n    return (\n        <div className=\"card\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Card\n","const INITIAL_STATE = {\n\n    articles:[]\n}\n\nfunction articleReducer(state = INITIAL_STATE, action){\n\n    switch (action.type) {\n        case \"ADDARTICLE\":{\n          const  newArr = [...state.articles];\n          newArr.unshift(action.payload)\n          return{\n              articles:newArr\n          }\n        }\n        case \"LOADARTICLES\":{\n            return {\n                ...state,\n                articles:action.payload\n            }\n        }\n            \n        default:\n         \n    }\n\n    return state;\n\n}\n\nexport default articleReducer;\n\n\nexport const getArticles = () => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json())\n    .then(data => {\n      dispatch({\n          type:'LOADARTICLES',\n          payload:data\n      })\n    })\n}","import React from 'react'\nimport './Home.css'\nimport Card from '../../Components/Card/Card'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useEffect,useState} from 'react'\nimport {getArticles} from '../../redux/articles/articleReducer'\nimport {v4 as uuidv4 } from 'uuid'\nimport {Link} from 'react-router-dom'\n\nfunction Home() {\n\n    const {articles} = useSelector(state => ({\n        ...state.articleReducer\n    }))\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(articles.length === 0 ){\n           dispatch(getArticles())\n        }\n    },[])\n\n\n    return (\n        <>\n          <h1 className=\"home-title\">Tous les articles</h1>  \n          <div className=\"container-cards\">\n             {articles.map(item => {\n                 return (\n                    <Card key={uuidv4()}>\n                        <h2>{item.title}</h2>\n                        <Link to={{\n                            pathname:`articles/${item.title.replace(/\\s+/g,'-').trim()}`,\n                            state:{\n                                title:item.title,\n                                 body:item.body,\n                            },\n                        }}>\n                        Lire l'article\n                        </Link>\n                    </Card>\n                 )\n             })}\n\n          </div>\n        </>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport './Contact.css'\n\nfunction Contact() {\n    return (\n        <div className=\"container-contact\">\n           <h1>Contactez-nous</h1> \n           <p>Par mail : blogreact@gmail.com</p>\n           <p>Par téléphonne : xxx-xxx-xxx</p>\n           <p>Rejoignez nous sur les réseaux</p>\n           <ul>\n               <li>Facebook</li>\n               <li>Twitter</li>\n               <li>Youtube</li>\n           </ul>\n        </div>\n    )\n}\n\nexport default Contact\n\n","import React,{useState,useRef} from 'react'\nimport {useDispatch} from 'react-redux'\nimport './Form.css'\n\nfunction Form() {\n\n  /*   const [article, setArticle] = useState({\n        title:\"\",\n        body:\"\"\n    }) */\n\n    const dispatch = useDispatch();\n\n    const handleForm = e => {\n        e.preventDefault();\n\n        const newArticle = {\n            title:inputsRef.current[0].value,\n            body:inputsRef.current[1].value,\n        }\n\n        dispatch({\n            type:'ADDARTICLE',\n           // payload:article\n           payload:newArticle\n        })\n\n        e.target.reset();\n\n      /*   setArticle({\n            title:\"\",\n            body:\"\"\n        })\n */    \n    }\n\n  /*   const handleInput = e => {\n\n        if(e.target.classList.contains('inp-title')){\n            const newoBJState = {...article, title:e.target.value}\n            setArticle(newoBJState)\n        }\n        else if(e.target.classList.contains('inp-body')){\n            const newoBJState = {...article, body:e.target.value}\n            setArticle(newoBJState)\n        }\n    } */\n\n    const  inputsRef  = useRef([]);\n\n    const addRefs = el => {\n        if(el && !inputsRef.current.includes(el)){\n             inputsRef.current.push(el)\n        }\n    }\n\n    return (\n        <>\n            <h1 className=\"title-form\">Ecrivez un article</h1>\n            <form onSubmit={handleForm} className=\"container-form\">\n                <label htmlFor=\"title\">Titre</label>\n                <input \n               /*  onChange={handleInput}\n                value={article.title} */\n                ref={addRefs}\n                type=\"text\" \n                id=\"title\" \n                placeholder=\"Entrez votre nom\"\n                className=\"inp-title\"\n                />\n\n                <label htmlFor=\"article\">Votre Article</label>\n              <textarea \n              /* onChange={handleInput} \n              value={article.body} */\n              ref={addRefs}\n              id=\"article\" \n              placeholder=\"Votre article\"\n              className=\"inp-body\" \n              />\n                <button>Evoyez l'article</button>\n            </form>\n        </>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport Form from '../../Components/Form/Form'\n\nfunction AddArticle() {\n    return (\n        <>\n            <Form/>\n        </>\n    )\n}\n\nexport default AddArticle\n","import React from 'react'\nimport {useLocation} from 'react-router-dom'\nimport './Article.css'\n\n\n\nfunction Article() {\n    const location = useLocation();\n    console.log(location);\n    return (\n        <div className=\"article-content\">\n            <h2>Votre article: {location.state.title}</h2>\n            <p>{location.state.body}</p>\n        </div>\n    )\n}\n\nexport default Article\n","import NavBar from './Components/NavBar/NavBar';\nimport Home from './Containers/Home/Home';\nimport {BrowserRouter as Router,Switch, Route} from 'react-router-dom'\nimport Contact from './Containers/Contact/Contact'\nimport AddArticle from './Containers/AddArticle/AddArticle'\nimport Article from './Containers/Article/Article'\n\n\nfunction App() {\n  return (\n    <>\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavBar/>\n      <Switch>\n        <Route path='/' exact component={Home}/>\n        <Route path='/ecrire' exact component={AddArticle}/>\n        <Route path='/contact' exact component={Contact}/>\n        <Route path='/articles/:slug' exact component={Article}/>\n\n      </Switch>\n    </Router>\n \n     \n    </>\n  );\n}\n\nexport default App;\n","import {createStore, applyMiddleware,combineReducers} from 'redux'\nimport articleReducer from '../redux/articles/articleReducer'\nimport thunk from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n\n    articleReducer\n\n\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}